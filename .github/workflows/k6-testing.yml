name: Run K6 Payflow Test

on:
  workflow_dispatch:
    inputs:
      vus:
        description: 'Number of Virtual Users'
        required: true
        default: '5'
      iterations:
        description: 'Iterations per user'
        required: true
        default: '1'
      base_url:
        description: 'Server to run k6 Test against'
        required: true
        type: choice
        options:
          - 'https://api.sandbox.datatrans.com'
          - 'https://api-001-chn-t-dfs-l.datatrans.tech'
          - 'https://api-002-chn-t-dfs-l.datatrans.tech'
        default: 'https://api.sandbox.datatrans.com'
      merchant_id:
        description: 'Merchant ID'
        required: true
        default: '1110017078'
      api_key:
        description: 'API Key'
        required: true
        default: 'testing'
      use_cloud:
        description: 'Use k6 Cloud? (true/false)'
        required: false
        default: 'false'

jobs:
  run-k6:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: List repo files for debug
        run: |
          echo "Root files:"
          ls -l
          echo "Scripts folder:"
          ls -l ./.github/scripts/
          echo "Scripts/k6 folder:"
          ls -l ./.github/scripts/k6/


      - name: Set k6 flags
        id: set_flags
        run: |
          if [ "${{ github.event.inputs.use_cloud }}" = "true" ]; then
            echo "flags=cloud" >> $GITHUB_OUTPUT
          else
            echo "flags=--vus ${{ github.event.inputs.vus }} --iterations ${{ github.event.inputs.iterations }} --out json=results.json" >> $GITHUB_OUTPUT
          fi

      - name: Run xk6-browser using Docker
        run: |
          docker run --rm \
            -v ${{ github.workspace }}:/scripts \
            -w /scripts \
            --shm-size=2g \
            grafana/xk6-browser \
            run /scripts/scripts/k6/payflow-payment.js \
            --vus ${{ github.event.inputs.vus }} \
            --iterations ${{ github.event.inputs.iterations }} \
            --out json=results.json


      - name: Upload test results as artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: k6-results
          path: results.json
